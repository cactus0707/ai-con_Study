/**
 * 배열.splice(시작인덱스, 삭제할 요소의 개수, 추가될 요소들 ...)
 * 
 * 시작인덱스 : 배열 요소가 변경될 시작 지점. splice는 특정위치의 요소를 지정하는 것이 필수!! 
 *           반드시, 첫 번째 인자 값은 배열 길이보다 작아야 유효함.
 * 
 * 삭제할 요소 갯수 : 시작 인덱스의 위치 부터 삭제하고자 하는 개수만큼 요소를 제거함.
 *                이때 해당 요소가 제거됨과 동시에 메소드 호출 결과로 값을 반환함.
 * 
 * 추가될 요소들   : 지정하면 시작인덱스부터 해당 요소들이 추가됨.
 */
const fruits = ['melon', 'lemon', 'source', 'apple', 'juice'];

fruits.splice(4,1);//인덱스 4 부터 (폐구간) 한개만 삭제하라 -> 4번쨰 요소가 삭제가됨.
fruits.splice(4, 0, 'grape') // 인덱스 4부터 0개를 삭제하고(아무것도 삭제 되지 않음) 대신 grape가 시작인덱스(인덱스 4)에 삽입이 됨.
fruits.splice(2, 1, 'mandarin', 'strawberry', 'watermelon') // 인덱스 2부터 1개를 삭제하고 ( 2번쨰 인덱스 값 삭제 후) 인덱스 2부터 만다른 스트로베리 워터멜론 삽입. 뒤에 배열은 자동으루 밀림.
console.log(fruits);

/**
 * 링크드 리스트라서 삽입 삭제 시에 오버헤드는 없을듯.
 * 따로 룩업 테이블이 없다면 서칭시 오버헤드 발생.
 */
